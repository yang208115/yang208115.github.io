const e=JSON.parse('{"key":"v-107e04b5","path":"/blogs/frontend/2023/proxy.html","title":"什么是 proxy 代理？","lang":"en-US","frontmatter":{"title":"什么是 proxy 代理？","date":"2023-11-26T00:00:00.000Z","tags":["javaScript"],"categories":["前端"],"sticky":1},"headers":[{"level":2,"title":"1. 什么是 proxy 代理","slug":"_1-什么是-proxy-代理","link":"#_1-什么是-proxy-代理","children":[]},{"level":2,"title":"2. Proxy 支持的拦截操作","slug":"_2-proxy-支持的拦截操作","link":"#_2-proxy-支持的拦截操作","children":[]},{"level":2,"title":"3. Reflect.get()","slug":"_3-reflect-get","link":"#_3-reflect-get","children":[{"level":3,"title":"Reflect.get(target, propertyKey, receiver)","slug":"reflect-get-target-propertykey-receiver","link":"#reflect-get-target-propertykey-receiver","children":[]}]},{"level":2,"title":"4. Reflect.get()与常见获取对象属性值有什么不同？","slug":"_4-reflect-get-与常见获取对象属性值有什么不同","link":"#_4-reflect-get-与常见获取对象属性值有什么不同","children":[]},{"level":2,"title":"5. proxy 代理的应用","slug":"_5-proxy-代理的应用","link":"#_5-proxy-代理的应用","children":[{"level":3,"title":"1. 拦截和定制对象操作","slug":"_1-拦截和定制对象操作","link":"#_1-拦截和定制对象操作","children":[]},{"level":3,"title":"2. 数据验证和保护","slug":"_2-数据验证和保护","link":"#_2-数据验证和保护","children":[]},{"level":3,"title":"3. 观察者模式","slug":"_3-观察者模式","link":"#_3-观察者模式","children":[]},{"level":3,"title":"4. 动态属性生成","slug":"_4-动态属性生成","link":"#_4-动态属性生成","children":[]}]}],"git":{},"filePathRelative":"blogs/frontend/2023/proxy.md"}');export{e as data};
